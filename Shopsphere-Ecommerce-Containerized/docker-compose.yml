services:
  shopsohere-ecomms-mongo:
    image: mongo:latest
    container_name: shopsohere-ecomms-mongo
    restart: always
    ports:
      - "27017:27017"
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')" --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin12345
    volumes:
      - shopsohere-mongo-data:/data/db
    networks:
      - shopsohere-network

  seed:
    build: ./backend
    command: npm run seed
    environment:
      MONGO_URI: mongodb://admin:admin12345@shopsohere-ecomms-mongo:27017/shopsphereDB?authSource=admin
      JWT_SECRET: your_strong_secret_key_here
      PORT: 5000
      NODE_ENV: production
    depends_on:
      shopsohere-ecomms-mongo:
        condition: service_healthy
    networks:
      - shopsohere-network



  mongo-express:
    image: mongo-express
    container_name: shopsohere-ecomms-mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin12345
      ME_CONFIG_MONGODB_SERVER: shopsohere-ecomms-mongo
      ME_CONFIG_MONGODB_URL: "mongodb://admin:admin12345@shopsohere-ecomms-mongo:27017/shopsphereDB?authSource=admin"
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin12345
    ports:
      - "8081:8081"
    depends_on:
      - shopsohere-ecomms-mongo
    networks:
      - shopsohere-network


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shopsohere-ecomms-backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      MONGO_URI: mongodb://admin:admin12345@shopsohere-ecomms-mongo:27017/shopsphereDB?authSource=admin
      JWT_SECRET: your_strong_secret_key_here
      PORT: 5000
      NODE_ENV: production
    depends_on:
      - seed
    networks:
      - shopsohere-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shopsohere-ecomms-frontend
    ports:
      - "80:80"
    restart: always
    # env_file:
    #   - ./frontend/.env
    depends_on:
      - backend
    networks:
      - shopsohere-network

volumes:
  shopsohere-mongo-data:


networks:
  shopsohere-network:
    driver: bridge
